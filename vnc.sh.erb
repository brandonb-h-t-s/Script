#!/bin/bash

#vnc.sh

function connect {
NUMPROCESS=`ps aux | grep -v grep | grep wsproxy | awk '{print $2}'`
ADDR=<%= @addr %>
kill ${NUMPROCESS}
/usr/bin/python ${ADDR}/utils/wsproxy.py --web ${ADDR} :<%= vncPort %> $1:9000 --daemon
 printf 'Content-Type: text/html\r\n\r\n'
     cat <<EOF
     <html>
       <head>
         <title>SSH Shell</title>
         <meta HTTP-EQUIV="Refresh" content="0;URL=http://<%= @ipFront %>:<%= @vncPort %>/vnc_auto.html">
       </head>
       <body>
         <h1>SSH Shell</h1>

         <p>Enter address to connect to:
         <form method="POST">
           <input type="text" name="cmd" style="width: 40em" value="127.0.0.1" />
         </form>
         </p>
       </body>
EOF

}

function not_connect {
#!/bin/bash

echo "Content-type: text/html"
echo ""
echo "<html><head><title>Welcome</title></head>"
echo "<body>"
echo "Connexion impossible"
echo "</body></html>"

}
case "${REQUEST_METHOD}" in
  GET)
     # Retrieve CGI parameter, then start shellinabox with this address
     parms=`echo $QUERY_STRING`

     if [ "$parms" != "" ]; then
        connect $parms
else
        not_connect
     fi
     ;;

  POST)
     # Retrieve CGI parameter, then start shellinabox with this address
     read parms
     parms="$(printf "$(echo "${parms}"|sed -e 's/%\(..\)/\\x\1/g;s/%/%%/g')")"  
     parms="${parms#cmd=}"
     if [ "$parms" != "" ]; then
        connect $parms
     else
        default
     fi
     ;;

  *)
     default
     ;;
esac
